在计算机科学中，数据结构是一种数据组织、管理和存储的格式。它是相互之间存在一种或多种特定关系的数据元素的集合。通常情况下，精心选择的数据结构可以带来更高的运行或者存储效率。数据结构往往同高效的检索算法和索引技术相关。
数据结构研究的是数据的逻辑结构和数据的物理结构以及它们之间的相互关系。它包含三个方面的内容：即数据的逻辑结构、数据的存储结构和数据的操作，只有这三个方面的内容完全相同，才能成为完全相同的数据结构。

## 研究对象

### 数据逻辑结构
数据的逻辑结构是指数据元素之间存在的逻辑关系，由数据元素的集合和定义在此集合上的关系组成。数据的逻辑结构与数据的存储无关，独立于计算机，是从具体问题抽象出来的数学模型。数据的逻辑结构由两个要素构成，分别是：数据元素的集合和关系的集合。一般来说，逻辑结构包括：
1.集合：数据结构中的元素之间除了“同属一个集合” 的相互关系外，别无其他关系；
2.线性结构：数据结构中的元素存在一对一的相互关系；
3.树形结构：数据结构中的元素存在一对多的相互关系；
4.图形结构：数据结构中的元素存在多对多的相互关系。
数据的逻辑结构分类数据的逻辑结构分类

### 数据的存储结构
数据的逻辑结构在计算机中的存储表示或实现叫做数据的存储结构，也叫物理结构。数据的存储结构依赖于计算机。
一般来说，一种数据结构的逻辑结构根据需要可以表示成多种存储结构，常用的存储结构有顺序存储、链式存储、索引存储和哈希存储等。
数据的顺序存储结构的特点是：借助元素在存储器中的相对位置来表示数据元素之间的逻辑关系；非顺序存储的特点是：借助指示元素存储地址的指针表示数据元素之间的逻辑关系。

## 分类
数据结构有很多种，一般来说，按照数据的逻辑结构对其进行简单的分类，包括线性结构和非线性结构两类。

### 线性结构
简单地说，线性结构就是表中各个结点具有线性关系。如果从数据结构的语言来描述，线性结构应该包括如下几点：
1.线性结构是非空集
2.线性结构有且仅有一个开始结点和终端结点。
3.线性结构所有结点都最多只有一个直接前驱节点和一个直接后继节点。
线性表就是典型的线性结构，还有栈、队列和串等都属于线性结构。

### 非线性结构
简单地说，非线性结构就是表中各个结点之间具有多个对应关系。如果从数据结构的语言来描述，非线性结构应该包括如下几点：
1.非线性结构是非空集。
2.非线性结构的一个结点可能有多个直接前驱结点和多个直接后继结点。
在实际应用中，数组、广义表、树结构和图结构等数据结构都属于非线性结构。

## 常见数据结构
在计算机科学的发展过程中，数据结构也随之发展。程序设计中常用的数据结构包括如下几个。

### 数组(Array)
数组是一种聚合数据类型，它是将具有相同类型的若干变量有序地组织在一起的集合。数组是最基本的数据结构，在各种编程语言中都有对应。一个数组可以分解为多个数组元素，按照数据元素的类型，数组可以分为整型数组、字符型数组、浮点型数组、指针数组和结构数组等。数组还可以有一维、二维以及多维等表现形式。

### 堆栈(Stack)
堆栈是一种特殊的线性表，又称为栈。它只能在表的固定端进行数据结点的插入和删除操作。栈按照先进后出、后进先出的原则来存储数据，也就是说，先插入的数据将被压入栈底，最后插入的数据在栈顶，读出数据时，从栈顶开始逐个读出。栈在汇编语言程序中，经常用于重要数据的现场保护。栈中没有数据时，称为空栈。

### 队列(Queue)
队列和栈类似，也是一种特殊的线性表。和栈不同的是，队列按照先进先出的原则来存储数据。队列只允许在表的一端进行插入操作，而在另一端进行删除操作。一般来说，进行插入操作的一端称为队尾，进行删除操作的一端称为队头。队列中没有元素时，称为空队列。

### 链表(Linked List)
链表是一种数据元素按照链式存储结构进行存储的数据结构，这种存储结构具有在物理上非连续的特点。链表由一系列数据结点构成，每个数据结点包括数据域和指针域两部分。其中，指针域保存了数据结构中下一个元素存放的地址。链表结构中数据元素的逻辑顺序通过链表中的指针链接次序实现。

### 树(Tree)
树是典型的非线性结构，它是由n（n>0）个有限结点组成的一个具有层次关系的集合。在树结构中，有且仅有一个根结点，该结点没有前驱结点。在树结构中的其他结点都有且仅有一个前驱结点。

### 图(Graph)
图是另一种非线性数据结构。图的数据结构包含一个有限的集合作为结点集合，以及一个无序对（对应无向图）或有序对（对应有向图）的集合作为边的集合。如果两个结点之间存在一条边，那么就表示这两个结点具有相邻关系。

### 堆(Heap)
堆是一种特殊的树形数据结构，一般讨论的堆都是二叉堆。堆的特点是根结点的值是所有结点中最小的或者最大的，并且根结点的两个子树也是一个堆结构。

### 散列表(Hash)
散列表源自于散列函数(Hash function)，其思想是如果在结构中存在关键字和T相等的记录，那么必定在F(T)的存储位置可以找到该记录，这样就可以不用进行比较操作而直接取得所查记录。

## 常用算法
数据操作是指对数据结构中的数据元素进行运算或处理。数据操作定义在数据的逻辑结构上，每种逻辑结构都需要一组对其数据元素进行处理以实现特定功能的操作，如插入、删除、更新等。数据操作的实现依赖于数据的存储结构。一般有以下几种常用运算：
（1） 创建操作
（2） 插入操作
（3） 删除操作
（4） 查找操作
（5） 修改操作
（6） 遍历操作
